import dayjs from 'dayjs';

import { EmploymentChoice, FormValue, GuarantorRelation } from '../../shared';

export const paymentFormFixture: () => FormValue = () => ({
  hiddenForm: {
    credit_duration_in_months: 12,
  },
  ratesForm: {
    credit_due_date: 20240220,
    commodity_group: 'Auto',
    condition: 'New',
    _down_payment_view: 5000,
    down_payment: 10000,
  },
  termsForm: {
    credit_protection_insurance: true,
    _agreement_for_data_processing_and_transfer: true,
    credit_accepts_requests_to_credit_agencies: true,
    allow_promo_email: false,
    allow_promo_phone: true,
    allow_promo_letter: false,
    allow_promo_others: false,
  },
  customer: {
    bankForm: {
      bank_i_b_a_n: 'DE89370400440532013000',
      bank_b_i_c: 'COBADEFFXXX',
      bank_account_bank_name: 'Santander',
    },
    personalForm: {
      personalBirthName: '',
      addressLandlinePhone: '+49123456789',
      addressCellPhone: '+49123456789',
      personalNationality: 'Deutsch',
      personalMaritalStatus: 'Single',
      personalPlaceOfBirth: 'Berlin',
      addressResidentSince: '2010-01-01',
      employment: EmploymentChoice.EMPLOYEE,
      freelancer: false,
      personalDateOfBirth: dayjs().subtract(20, 'years').toISOString(),
      prevAddress: {
        _prevAddressLine: 'Musterstraße 1',
        prevAddressCity: 'Berlin',
        prevAddressStreet: 'Musterstraße',
        prevAddressStreetNumber: '1',
        prevAddressZip: '12345',
        prevAddressResidentSince: '2000-01-01',
        prevAddressCountry: 'Deutschland',
      },
      typeOfGuarantorRelation: GuarantorRelation.NONE,
    },
    incomeForm: {
      netIncome: 40000,
      netIncomePartner: 0,
      otherIncome: 2000,
      sortOfIncome: 'Salary',
      rentalIncome: 1000,
      incomeResidence: 'Rent',
      housingCosts: 800,
      monthlyMaintenancePayments: 100,
    },
    employmentForm: {
      freelancer: {
        freelancerEmployedSince: new Date('2020-01-01'),
        freelancerCompanyName: '',
      },
      employer: 'Example GmbH',
      employedSince: new Date('2018-01-01'),
      prevEmployer: 'Previous Company GmbH',
      prevEmployedSince: new Date('2015-01-01'),
      employmentLimited: false,
      employedUntil: new Date('2023-01-01'),
    },
    protectionForm: {
      creditProtectionInsurance: true,
      _yes: true,
      _no: false,
    }
  },
});


export const paymentFormWithGuarantorFixture: () => FormValue = () => ({
  hiddenForm: {
    credit_duration_in_months: 12,
  },
  ratesForm: {
    credit_due_date: 20240220,
    commodity_group: 'Auto',
    condition: 'New',
    _down_payment_view: 5000,
    down_payment: 10000,
  },
  termsForm: {
    credit_protection_insurance: true,
    _agreement_for_data_processing_and_transfer: true,
    credit_accepts_requests_to_credit_agencies: true,
    allow_promo_email: false,
    allow_promo_phone: true,
    allow_promo_letter: false,
    allow_promo_others: false,
  },
  customer: {
    bankForm: {
      bank_i_b_a_n: 'DE89370400440532013000',
      bank_b_i_c: 'COBADEFFXXX',
      bank_account_bank_name: 'Santander',
    },
    personalForm: {
      personalBirthName: '',
      addressLandlinePhone: '+49123456789',
      addressCellPhone: '+49123456789',
      personalNationality: 'Deutsch',
      personalMaritalStatus: 'Single',
      personalPlaceOfBirth: 'Berlin',
      addressResidentSince: '2010-01-01',
      employment: EmploymentChoice.EMPLOYEE,
      freelancer: false,
      personalDateOfBirth: dayjs().subtract(20, 'years').toISOString(),
      prevAddress: {
        _prevAddressLine: 'Musterstraße 1',
        prevAddressCity: 'Berlin',
        prevAddressStreet: 'Musterstraße',
        prevAddressStreetNumber: '1',
        prevAddressZip: '12345',
        prevAddressResidentSince: '2000-01-01',
        prevAddressCountry: 'Deutschland',
      },
      typeOfGuarantorRelation: GuarantorRelation.EQUIVALENT_HOUSEHOLD,
    },
    incomeForm: {
      netIncome: 40000,
      netIncomePartner: 0,
      otherIncome: 2000,
      sortOfIncome: 'Salary',
      rentalIncome: 1000,
      incomeResidence: 'Rent',
      housingCosts: 800,
      monthlyMaintenancePayments: 100,
    },
    protectionForm: {
      creditProtectionInsurance: true,
      _yes: true,
      _no: false,
    },
    employmentForm: {
      freelancer: {
        freelancerEmployedSince: new Date('2020-01-01'),
        freelancerCompanyName: '',
      },
      employer: 'Example GmbH',
      employedSince: new Date('2018-01-01'),
      prevEmployer: 'Previous Company GmbH',
      prevEmployedSince: new Date('2015-01-01'),
      employmentLimited: false,
      employedUntil: new Date('2023-01-01'),
    },
  },
  guarantor: {
    personalForm: {
      personalBirthName: 'test',
      addressLandlinePhone: '',
      addressCellPhone: '+491711234567',
      personalNationality: 'DE',
      personalMaritalStatus: 'VERHEIRATET',
      addressResidentSince: '2011-06-30T19:30:00.000Z',
      personalPlaceOfBirth: 'test',
      personalDateOfBirth: '2001-06-07T00:00:00.000Z',
      employment: 'ANGESTELLTER',
      freelancer: false,
    },
    employmentForm: {
      freelancer: null,
      prevEmployer: null,
      prevEmployedSince: null,
      employedUntil: null,
      employer: 'guarantor employer',
      employedSince: new Date('2018-02-02'),
      employmentLimited: false,
    },
    addressForm: {
      email: 'Mohammad.Mirshaei@payever.org',
      salutation: 'SALUTATION_MR',
      firstName: 'test',
      lastName: 'User',
    },
    incomeForm: {
      netIncome: 123,
      netIncomePartner: null,
      otherIncome: null,
      rentalIncome: null,
      sortOfIncome: 'Salary',
      incomeResidence: 'RENTAL',
      housingCosts: null,
      monthlyMaintenancePayments: null,
    },
    bankForm: {
      bank_i_b_a_n: 'DE89370400456987013000',
      bank_b_i_c: 'COBADEFFXXX',
      bank_account_bank_name: 'Santander',
    },
  },
});