import {
  BusinessTypeEnum,
  FlowInterface,
  FlowStateEnum,
  PaymentMethodEnum,
  PaymentMethodVariantEnum,
  SalutationEnum,
} from '@pe/checkout/types';

export const flowWithPaymentOptionsFixture: () => FlowInterface = () => ({
  id: 'flow-id',
  amount: 1000,
  currency: 'EUR',
  reference: 'reference',
  total: 1000,
  cart: [],
  billingAddress: {
    city: 'Gießen',
    country: 'DE',
    email: 'customer2000@email.de',
    firstName: 'test',
    lastName: 'user',
    phone: null,
    salutation: SalutationEnum.SALUTATION_MRS,
    street: 'Berliner Platz 12',
    streetName: 'Berliner Platz',
    streetNumber: '12',
    zipCode: '35390',
    organizationName: null,
  },
  deliveryFee: 0,
  forceLegacyCartStep: true,
  forceLegacyUseInventory: true,
  state: FlowStateEnum.PROGRESS,
  apiCall: {
    id: 'apiCall-id',
    birthDate: null,
  },
  businessId: 'business-id',
  businessName: 'DE',
  businessCountry: 'DE',
  businessIban: 'business-iban',
  businessAddressLine: 'Marthastraße 20, 90482, Nürnberg, DE',
  businessType: BusinessTypeEnum.B2C,
  channel: 'link',
  channelSetId: 'channel-set-id',
  channelType: 'checkout',
  connectionId: 'stripe-connections-id',
  paymentOptions: [
    {
      min: 0.5,
      max: 100000,
      acceptFee: false,
      settings: null,
      slug: 'slug',
      name: 'stripe.name',
      paymentMethod: PaymentMethodEnum.GOOGLE_PAY,
      fixedFee: 0.25,
      variableFee: 2.9,
      shareBagEnabled: true,
      connections: [
        {
          id: 'stripe-connections-id',
          default: false,
          name: 'connections-name',
          merchantCoversFee: null,

          shippingAddressAllowed: true,
          shippingAddressEquality: false,
          version: PaymentMethodVariantEnum.Default,
        },
      ],
    },
  ],
});
