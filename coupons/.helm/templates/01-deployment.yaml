{{ $chartName := .Chart.Name }}
{{ $values := .Values }}
{{ $appName := $chartName }}
{{ $nginxMainConfigName := printf "frontend-nginx-main-config" }}
{{ $nginxConfigName:= printf "frontend-nginx-config" }}
{{ $urlMapConfigName:= printf "micro-url-map" }}

apiVersion: apps/v1
kind: Deployment

metadata:
  name: {{ $appName }}
  namespace: {{ $values.namespace }}

  labels:
    app: {{ $appName }}
    tier: frontend
    type: http

  annotations:
    "werf.io/set-replicas-only-on-creation": "true"

spec:
  replicas: {{ $values.replicas.http }}

  strategy:
    type: RollingUpdate

    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  selector:
    matchLabels:
      app: {{ $appName }}

  template:
    metadata:
      labels:
        app: {{ $appName }}
        tier: frontend
        type: http

      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'runtime/default'

    spec:
      priorityClassName: {{ $values.priorityClass }}

      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node_worker
                operator: Exists

      imagePullSecrets:
        - name: {{ $values.image.pullSecretName }}

      containers:
        - name: nginx
          image: {{ $values.image.nginx }}
          imagePullPolicy: IfNotPresent
          command: [ "/bin/bash", "-c", "/payever/deploy/deploy.sh" ]

          ports:
            - containerPort: {{ $values.service.containerPort }}
              protocol: TCP
              name: http

          lifecycle:
            preStop:
              exec:
                command: ["sleep", "15"]

          livenessProbe:
            httpGet:
              path: /api/status
              port: {{ $values.service.monitoringPort }}
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 3
            failureThreshold: 3

          readinessProbe:
            httpGet:
              path: /api/status
              port: {{ $values.service.monitoringPort }}
            initialDelaySeconds: 10
            periodSeconds: 5
            failureThreshold: 60

          volumeMounts:
            - name: {{ $nginxConfigName }}
              mountPath: /etc/nginx/conf.d

            - name: {{ $nginxMainConfigName }}
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf

          resources:
{{ toYaml $values.resources | indent 12 }}

          envFrom:
            - configMapRef:
                name: {{ $chartName }}
            - configMapRef:
                name: {{ $urlMapConfigName }}
            - secretRef:
                name: {{ $chartName }}

          env:
            - name: KUBERNETES_DEPLOYED
              value: "{{ now }}"

      volumes:
        - name: {{ $nginxConfigName }}
          configMap:
            name: {{ $nginxConfigName }}

        - name: {{ $nginxMainConfigName }}
          configMap:
            name: {{ $nginxMainConfigName }}
