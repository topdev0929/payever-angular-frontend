const path = require('path');

const webpack = require('webpack');
const ExtractTextPlugin = require("extract-text-webpack-plugin");

module.exports = {

  resolve: {
    modules: [
      path.join(__dirname, '../'),
      'node_modules'
    ],

    extensions: ['.ts', '.js', '.coffee', '.scss', '.json'],
    alias     : {
      'jquery': 'jquery/dist/jquery'
    }
  },

  module: {
    loaders: [
      {
        test   : /\.js$/,
        include: /\/ngx-bootstrap\//,
        loader : 'babel-loader',
        options: {
          presets: ['es2015']
        }
      },
      {
        test   : /\.js$/,
        exclude: /\/node_modules\//,
        loader : 'babel-loader',
        options: {
          presets: ['es2015']
        }
      },
      {
        test   : /\.ts$/,
        loaders: [
          'awesome-typescript-loader',
          'angular2-template-loader',
          'angular-router-loader'
        ]
      },
      {
        test  : /\.coffee$/,
        loader: 'coffee-loader'
      },
      {
        test  : /\.html$/,
        loader: 'html-loader',
        query : {
          minimize                : true,
          caseSensitive           : true,
          collapseWhitespace      : true,
          conservativeCollapse    : true,
          customAttrAssign        : [/\)?\]?=/],
          customAttrSurround      : [
            [/#/, /(?:)/],
            [/\*/, /(?:)/],
            [/\[?\(?/, /(?:)/]
          ],
          includeAutoGeneratedTags: false,
          removeAttributeQuotes   : false,
          removeComments          : true,
          minifyCSS               : true
        }
      },
      {
        test   : /\.txt$/,
        include: /component/,
        loaders: ['raw-loader']
      },
      {
        test   : /\.scss$/,
        include: /component/,
        loaders: ['raw-loader', 'sass-loader']
      },
      {
        test   : /\.scss$/,
        exclude: /component/,
        loader : ExtractTextPlugin.extract({
          fallback: 'style-loader',
          use     : 'css-loader?sourceMap!sass-loader?sourceMap'
        })
      },
      {
        test   : /\.(png|jpe?g|gif|svg|woff|woff2|ttf|eot|ico)$/,
        include: /\/node_modules\//,
        loader : 'url-loader?name=[1]_[hash:6].[ext]&regExp=node_modules/(.*)&limit=16384'
      },
      {
        test   : /\.(png|jpe?g|gif|svg|woff|woff2|ttf|eot|ico)$/,
        exclude: /\/node_modules\//,
        loader : 'url-loader?name=[path][name]_[hash:6].[ext]&limit=16384'
      },
    ]
  },
};
