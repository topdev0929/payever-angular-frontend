@use "pe_variables" as pe_variables;
@use 'SASS:map';

@mixin color($color-config) {
  $primary: map.get($color-config, 'primary');
  $icon-background: map.get($color-config, 'icon-background');
  $text-color: map.get($color-config, 'text-color');
  $label-color: map.get($color-config, 'label-color');
  $background: map.get($color-config, 'background');
  $confirm: map.get($color-config, 'confirm');
  $fill-black: map.get($color-config, 'fill-black');
  $active-text: map.get($color-config, 'active-text');
  $filter-invert-light: map.get($color-config, 'filter-invert-light');
  $transparent-color: map.get($color-config, 'transparent-color');

  .custom-drag-preview, .cdk-drag-preview {
    background: $icon-background;
    backdrop-filter: blur(25px);
    border-radius: 16px;
    color: $text-color;
    .icon-menu-wrapper {
      background-color: $label-color;
      color: $active-text;
      &.drag-icon-wrapper {
        background-color: $transparent-color;
        .icon-menu-item {
          filter: $filter-invert-light;
        }
      }
    }
  }
  .checkout-app-container {
    .mat-list-transparent {
      .mat-list-item-content {
        .pe-truncate-text {
          color: $text-color;
        }
        .mat-list-item-flex {
          border-bottom-color: $background;
        }
        .icon-menu-wrapper {
          background-color: $label-color;
          &.drag-icon-wrapper {
            background-color: $transparent-color;
            .icon-menu-item {
              filter: $filter-invert-light;
            }
          }
        }
      }
    }
    .pe-info-box-container-fixed {
        .mat-list-item {
          &.action-item,
          &:not(.no-hover, .sections-mat-list-item) .mat-list-item-content {
            &.active {
              background-color: $confirm;
    
              .mat-list-item-open-icon,
              .pe-truncate-text,
              .expansion-list-button {
                color: $active-text !important;
              }
              .icon-menu-wrapper .icon {
                filter: none;
              }
              .mat-list-item-flex {
                border-color: $transparent-color;
              }
              .button-toggle {
                opacity: 1;
                &-slider {
                  background-color: $fill-black;
                }
              }
            }
            @media (min-width: pe_variables.$viewport-breakpoint-sm-2) {              
              &:hover {
                background-color: $confirm;
      
                .mat-list-item-open-icon,
                .pe-truncate-text,
                .expansion-list-button {
                  color: $active-text !important;
                }
                .icon-menu-wrapper .icon {
                  filter: none;
                }
                .mat-list-item-flex {
                  border-color: $transparent-color;
                }
                .button-toggle {
                  opacity: 1;
                  &-slider {
                    background-color: $fill-black;
                  }
                }
              }
            }
          }
        }
      }
    }
}
